<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd ">
	
	<!-- 1:配置注解的自动扫描的范围 -->
	<context:component-scan base-package="com.rent.dao,com.rent.service,com.rent.*,com.rent.web.action"></context:component-scan>
	<!-- 分散配置 -->
	<context:property-placeholder location="classpath:config.properties"/>
	<!-- 数据库连接池配置 -->
	<bean id="dataSource"
		class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClass}"/>
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.user}"/>
		<property name="password" value="${jdbc.password}" />
	</bean>
	<!-- 3:创建sessionFactory，这是spring整合hibernate的入口 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 非注解配置 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/db_scatlet</prop>
				<prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.rent.domin.Car</value>
				<value>com.rent.domin.Comment</value>
				<value>com.rent.domin.Label</value>
				<value>com.rent.domin.Manager</value>
				<value>com.rent.domin.Picture</value>
				<value>com.rent.domin.PictureCar</value>
				<value>com.rent.domin.PictureManager</value>
				<value>com.rent.domin.PictureUser</value>
				<value>com.rent.domin.RentInfo</value>
				<value>com.rent.domin.Role</value>
				<value>com.rent.domin.User</value>
			</list>
		</property>
		<property name="mappingLocations">
			<list>
			</list>
		</property>
	</bean>
	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 以注解形式管理事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 事务管理器,在service层面上实现事务管理,而且达到平台无关性 -->
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 配置事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT" />
			<tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT" />
			<tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT" />

			<tx:method name="get*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
			<tx:method name="load*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
			<tx:method name="find*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>

			<tx:method name="*" propagation="REQUIRED" isolation="DEFAULT" />
		</tx:attributes>
	</tx:advice>
	<!-- aop事务配置 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* *..*Service.*(..))"/>
	</aop:config>
</beans>